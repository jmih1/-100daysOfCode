class Solution {
    public int majorityElement(int[] nums) {
      //  System.out.println(nums.length/2);
        int half = nums.length/2;
        
          HashMap<Integer, Integer> hmap = new HashMap<Integer, Integer>();
        
        int ans = 0;

        for (int i = 0; i < nums.length; i++){
            if (hmap.containsKey(nums[i])){
                
                int value = hmap.get(nums[i]);
               //  System.out.println(value + " m");
                hmap.put(nums[i],value+1);
            }
            else{
                hmap.put(i,1);
            }
        }
        
       // Set set = hmap.entrySet();
        
      //  Iterator itr = set.iterator();
        for (int i = 0; i < nums.length; i++){
            //System.out.println(hmap.get(i));
           // System.out.println(i);
            if (hmap.get(nums[i]) != null){
              //  System.out.println(hmap.get(nums[i]));
              //  System.out.println(i+"i");
                int value = hmap.get(nums[i]);
                System.out.println(value);
                if ( value > half) {
                    System.out.println(i);
                   ans = nums[i]; 
                }
            }
                
            
           
           }
        
         return ans;
        }
        
        
        /*while(itr.hasNext()){
            if (hmap.get(itr.next()) > nums.length/2) {
                ans = hmap.get(itr.next());
            } 
        }*/
       
    }
